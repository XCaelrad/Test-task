function deduplicateAndPushZeros(arr) {
    let uniquePosition = 0 // позиция, куда будет записываться следующие уникальное число.
    const uniqueNumbers = new Set() // объект, в Set не могут попасть одинаковые числа, только уникальные, поэтому используется Set, а не обычный объект.

    // Убираем дубликаты и сдвигаем нули
    for (let i=0; i < arr.length; i++) { // начинаем перебирать массив с 0 индекса и до длины массива.
        if (arr[i] !== 0 && !uniqueNumbers.has(arr[i])) { //если элемент не равен 0 и его нет в нашем объекте Set, то:
            if (i !== uniquePosition) { // если текущая позиция не совпадает с позицией в uniquePosition.
                arr[uniquePosition] = arr[i] // записываем текущий элемент в uniquePosition (перемещаем число на его новую позицию в начале массива).
            }
            uniqueNumbers.add(arr[i]) //добавляем число в Set уникальных чисел (помечаем как уже встреченное).
            uniquePosition++ // увеличиваем позицию для следующего уникального числа (сдвигаем указатель для следующего уникального числа).
        }
    }

    // Заполняем оставшиеся позиции нулями
    while (uniquePosition < arr.length) { // пока позиция меньше длины массива (т.е. есть куда записывать нули).
        arr[uniquePosition++] = 0 //заполняем нулями и сдвигаем позицию (записываем нули во все оставшиеся позиции).
    }

    return arr //возвращаем измененный массив (теперь в начале стоят уникальные числа, а в конце - нули).
}

console.log(deduplicateAndPushZeros([0,1,3,5,0,4,3,0]))